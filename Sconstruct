
import os

if hasattr(os,'uname'):
    system = os.uname()[0]
else:
    system = 'Windows'

# source files and libraries
src_files = ['mtm.c', 'tfr.c']
hdr_files = ['tfr.h']
libs = ['m']

lib_path = ['/lib','/usr/lib','/usr/lib64','/usr/local/lib','/usr/local/lib64',]

# install location
AddOption('--prefix',
          dest='prefix',
          type='string',
          nargs=1,
          action='store',
          metavar='DIR',
          help='installation prefix')

if not GetOption('prefix')==None:
    install_prefix = GetOption('prefix')
else:
    install_prefix = '/usr/local/'

Help("""
Type: 'scons' to build the library
      'scons install' to install library and headers under %s
      (use --prefix  to change this)
""" % install_prefix)

# build options
env = Environment(LIBPATH = lib_path,
                  CCFLAGS = ['-O2', '-std=c99'])

# system-specific settings
if system=='Darwin':
    env.Append(LIBS = ['lapack'],
               CPPPATH = ['/opt/local/include'],
               LIBPATH = ['/opt/local/lib'])
elif system=='Linux':
    env.Append(LIBS = ['atlas','cblas','f77blas','lapack'])


# check platform configuration
if not env.GetOption('clean'):
    conf = Configure(env)
    if not conf.CheckLibWithHeader('fftw3','fftw3.h','c'):
        print "Did not find fftw3 library; exiting"
        Exit(1)
    env = conf.Finish()


sharedobjs = env.SharedObject(src_files)
slib = env.StaticLibrary('libtfrspec', source = src_files)
dylib = env.SharedLibrary('libtfrspec', sharedobjs)

env.Alias('lib', [slib, dylib])
env.Alias('install', env.Install(os.path.join(install_prefix, 'include'), hdr_files))
env.Alias('install', env.Install(os.path.join(install_prefix,'lib'), [slib, dylib]))

# Python module
import distutils.sysconfig
pybase = distutils.sysconfig.get_python_lib(plat_specific=1)
pyvars = distutils.sysconfig.get_config_vars('CC', 'CXX', 'OPT', 'BASECFLAGS', 'CCSHARED', 'LDSHARED', 'SO')
(cc, cxx, opt, basecflags, ccshared, ldshared, so_ext) = [x if x!=None else '' for x in pyvars]
nxdir = os.path.join(pybase, 'numpy/core/include')

pyenv = env.Clone()
pyenv.Replace(CC=cc,
              SHLINK=ldshared,
              SHLINKFLAGS=[],
              SHLIBPREFIX="",
              SHLIBSUFFIX=so_ext,)
pyenv.Append(CPPPATH=[distutils.sysconfig.get_python_inc(), nxdir],
             CPPFLAGS=basecflags + " " + opt)

pylib = pyenv.SharedLibrary('_libtfr',['libtfr.c',sharedobjs])

pyenv.Alias('python', pylib)
pyenv.Alias('python-install', pyenv.Install(pybase, [pylib, 'libtfr.py']))
