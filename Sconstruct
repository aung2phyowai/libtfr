
import os

# build options
env = Environment(CCFLAGS = '-O2 -std=c99')

# install location
install_prefix = '/usr/local/'

# source files and libraries
src_files = ['mtm.c', 'tfr.c']
hdr_files = ['tfr.h']
libs = ['m','fftw3']

# check platform configuration
if not env.GetOption('clean'):
    conf = Configure(env)
    if not conf.CheckLibWithHeader('m', 'math.h', 'c'):
        print 'Did not find libm.a or m.lib; exiting'
        Exit(1)
    if not conf.CheckLibWithHeader('fftw3','fftw3.h','c'):
        print "Did not find fftw3 library; exiting"
        Exit(1)
    if conf.CheckLib('lapack'):
        # setting up the lapack dependency is tricky. This should work for vecLib under OS X,
        # for ATLAS you'll need to include cblas and atlas
        libs.append('lapack')
    else:
        print "Did not find lapack library; MTM spectrograms disabled"
        conf.env.Append(CCFLAGS = ' -DNO_LAPACK')
    env = conf.Finish()

slib = env.StaticLibrary('libtfrspec', source = src_files, LIBS = libs, CPPPATH = '.')
dylib = env.SharedLibrary('libtfrspec', source = src_files, LIBS = libs, CPPPATH = '.')

env.Alias('install', env.Install(os.path.join(install_prefix, 'include'), hdr_files))
env.Alias('install', env.Install(os.path.join(install_prefix,'lib'), [slib, dylib]))
