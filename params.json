{"name":"Libtfr","tagline":"fast multitaper conventional and reassignment spectrograms","body":"Libtfr is a library for calculating multi-taper conventional and time-frequency reassignment (TFR) spectrograms.\r\n\r\n## Why use reassignment spectrograms?\r\n\r\nMainly for readability. Compare the conventional windowed spectrogram on the right with the reassignment spectrogram on the right.\r\n\r\n![nil](A7_hanning_sm.png) ![nil](A7_tfr_sm.png)\r\n\r\nThe spectral energy distribution is much sparser in the second image, and it's easier to see the high-frequency trill (the tone that's rapidly modulated up and down) right in the middle of the sound. For some applications, reassignment spectrograms can provide much more precise measurements.\r\n\r\nIt's important to note that no signal processing tricks can do away with the fundamental tradeoff in time-frequency *resolution*. In the images above, the trill gets close enough to the lower-frequency tonal component that the two start to smear together. Spectral resolution can only be increased by increasing the size of the analysis window, which reduces temporal resolution.\r\n\r\n## Why use libtfr?\r\n\r\n* It's fast. The library is written on top of the [FFTW](http://www.fftw.org) library, one of the fastest Fourier transformation libraries, and the library itself is in lightweight C99 code. On a reasonably modern processor, libtfr can calculate a multitaper reassignment spectrogram in 1/2 to 1/4 of the duration of the signal, making it usable for realtime applications.\r\n* It's convenient. The library is well-documented and comes with python and MATLAB interfaces.\r\n* It's free (as in speech)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}