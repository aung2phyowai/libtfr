
Libtfrspec is a library for calculating multi-taper time-frequency
reassignment (TFR) spectrograms.  Time-frequency reassignment is a
method that makes use of the instantaneous frequency and phase values
in a spectrogram to 'deconvolve' the image, and can yield
substantially sharper spectrograms with better signal-noise resolution
than conventional windowed spectrograms (i.e. short-time Fourier
transforms) or multi-taper spectrograms (using the discrete prolate
spherical sequences).

Calculating good TFR spectrograms requires a lot of FFT operations, so
libtfrspec is implemented in C and uses one of the fastest and most
flexible FFT packages, FFTW.  If LAPACK is installed (see below),
libtfrspec can also be used to calculate convential multi-taper
spectrograms rapidly.

A python module using numpy, and a MATLAB mex file are
included for interfaces to the library.

libtfrspec was written by C Daniel Meliza (dmeliza@uchicago.edu) and
is licensed under the Gnu Public License (GPL) version 2; see COPYING
for details.

** Installation:

Libtfrspec uses SCONS, an alternative to Make/Autoconf, to build and install.
You can get SCONS from http://www.scons.org.  A Makefile is also included but
is not guaranteed to be portable without some fiddling.

To build the library (static and shared), type:

scons lib

To install the libraries and header (default to /usr/local/lib and /usr/local/include):

scons install

To build the python wrapper:

scons python

To install the python wrapper to the standard site-packages directory:

scons python-install

In order to compute conventional MT spectrograms, LAPACK has to be
installed. SCONS will attempt to detect whether this library exists;
however, LAPACK libraries are notoriously difficult to find.  Edit the
lapack_libs line in the Sconstruct file to help SCONS find them.

To build the MATLAB mex file, after building the library type:

mex tfrspec.c tfr.os mtm.os

Note that you have to use the shared objects in order for MEX to
generate a dynamically loadable file. Copy the mex file (the extension
will depend on your platform) and the associated mfile to a location
in your MATLAB path.

** Algorithm and usage notes:

Assembled from various MATLAB sources, including the time-frequency
toolkit [1], Xiao and Flandrin's work on multitaper reassignment [2]
and code from Gardner and Magnasco [3].

The basic principle is to use reassignment to increase the precision
of the time-frequency localization, essentially by deconvolving the
spectrogram with the TF representation of the window, recovering the
center of mass of the spectrotemporal energy.  Reassigned TFRs
typically show a 'froth' for noise, and strong narrow lines for
coherent signals like pure tones, chirps, and so forth.  The use of
multiple tapers reinforces the coherent signals while averaging out
the froth, giving a very clean spectrogram with optimal precision and
resolution properties.

Gardner & Magnasco calculate reassignment based on a different
algorithm from Xiao and Flandrin.  The latter involves 3 different FFT
operations on the signal windowed with the hermitian taper [h(t)], its
derivative [h'(t)], and its time product [t * h(t)].  The G&M
algorithm only uses two FFTs, on the signal windowed with a gassian
and its time derivative.  If I understand their methods correctly,
however, this derivation is based on properties of the fourier
transform of the gaussian, and isn't appropriate for window functions
based on the Hermitian tapers, which have more optimal distribution of
energy over the TF plane (i.e. it takes fewer Hermitian tapers than
Gaussian tapers to achieve the same resolution)

Therefore, the algorithm is mostly from [2], though I include time and
frequency locking parameters from [3], which specify how far energy is
allowed to be reassigned in the TF plane.  Large displacements
generally arise from numerical errors, so this helps to sharpen the
lines somewhat. I also included the time/frequency interpolation from
[3], which can be used to get higher precision (at the expense of less
averaging) from smaller analysis windows.

Some fiddling with parameters is necessary to get the best
spectrograms from a given sort of signal.  Like the window size in an
STFT, the taper parameters control the time-frequency resolution.
However, in the reassignment spectrogram the precision
(i.e. localization) is not affected by the taper size, so the effects
of taper size will generally only be seen when two coherent signals
are close to each other in time or frequency.  Nh controls the size of
the tapers; one can also adjust tm, the time support of the tapers,
but depending on the number of tapers used, this shouldn't get a whole
lot smaller than 5.  Increased values of Nh result in improved
narrowband resolution (i.e. between pure tones) but closely spaced
clicks can become smeared.  Decreasing Nh increases the resolution
between broadband components (i.e. clicks) but smears closely spaced
narrowband components.  The effect of smearing can be ameliorated to
some extent by adjusting the frequency/time locking parameters.

The frequency zoom parameter can be used to speed up calculation quite
a bit [3].  Since calculating the multitaper reassigned spectrogram
takes 3xNtapers FFT operations, smaller FFTs are generally better.
The spectrogram can then be binned at a finer resolution during
reassignment.  These two sets of parameters should generate fairly
similar results:

  nfft=512, shift=10, tm=6, Nh=257, zoomf=1, zoomt=1  (default)
  nfft=256, shift=10, tm=6, Nh=257, zoomf=2, zoomt=1

Increasing the order generally reduces the background 'froth', but
interference between closely spaced components may increase.

Additional improvements in resolution may be achievable averaging
across different window sizes, or by using other averaging methods
(i.e. as in Xiao and Flandrin)

References:

  [1] http://tftb.nongnu.org/

  [2] Xiao, J. & Flandrin, P. Multitaper Time-Frequency Reassignment
      for Nonstationary Spectrum Estimation and Chirp Enhancement
      Signal Processing, IEEE Transactions on, Signal Processing, IEEE
      Transactions on, 2007, 55, 2851-2860
      
      code: http://perso.ens-lyon.fr/patrick.flandrin/multitfr.html

  [3] Gardner, T. J. & Magnasco, M. O. Sparse time-frequency
      representations. Proc. Natl. Acad. Sci. U S A, 2006, 103,
      6094-6099

      code: http://web.mit.edu/tgardner/www/Downloads/Entries/2007/10/22_Blue_bird_day_files/ifdv.m 
